#! /bin/bash

echo "Welcome to the BlockyTalky installer. Please ensure you have Internet connectivity before running this script. NOTE: this script will reboot your Raspberry Pi after completion."
echo " "
echo "Press ENTER to continue installation."
read
echo "Would you like to set a hostname? (y/n)"
read host

if [ "$host" == "y" ] || [ "$host" == "Y" ]; then
    echo "Enter a hostname: "
    read hostname
fi

echo "Would you like to set up your wireless connection? (y/n)"
read setup

if [ "$setup" == "y" ] || [ "$setup" == "Y" ]; then
    echo "Enter SSID:"
    read ssid
    echo "Enter Password (blank for none):"
    read password
fi

echo "Installing dependencies..."
sudo apt-get update
sudo apt-get install -y python-pip git libi2c-dev python-serial python-rpi.gpio i2c-tools python-smbus avahi-daemon
cd ~
sudo pip install flask
sudo pip install tornado
sudo pip install jsonpickle
sudo pip install pyttsx
sudo pip install pyOSC
sudo pip install websocket-client
sudo pip install pika
sudo apt-get install -y python-dev
sudo apt-get install -y libffi-dev
sudo pip install flask-bcrypt
sudo pip install requests
wget http://www.rabbitmq.com/releases/rabbitmq-server/v3.2.2/rabbitmq-server_3.2.2-1_all.deb
sudo dpkg -i rabbitmq-server_3.2.2-1_all.deb
sudo apt-get -f -y install
sudo rabbitmq-plugins enable rabbitmq_web_stomp
sudo rabbitmqctl set_policy TTL ".*" '{"message-ttl":3000}' --apply-to queues

#install daemon tools
sudo mkdir -p /package
sudo chmod 755 /package
cd /package

wget http://cr.yp.to/daemontools/daemontools-0.76.tar.gz
tar -xpf daemontools-0.76.tar.gz
rm -f daemontools-0.76.tar.gz
cd admin/daemontools-0.76
sudo ed ./src/conf-cc
#if install fails:
1s/$/ -include errno.h/
w
q
sudo package/install


sudo apt-get install -y csh
sudo csh -cf '/command/svscanboot &'

#sudo sed -i "1 a\csh -cf '/command/svscanboot &'" /etc/rc.local
sudo chmod +x /etc/rc.local

sudo mkdir /service/hd
sudo cp /home/pi/blockytalky/build.d/run /service/hd

echo 'wins server =wlan0:0.0.0.0' > /etc/samba/dhcp.conf
if [[ -f /home/coder/coder-dist/coder-base/server.js ]]; then
  sudo cp /home/coder/coder-dist/coder-base/server.js /home/coder/coder-dist/coder-base/server.js.bkup
  sudo cp /home/coder/coder-dist/coder-base/localserver.js /home/coder/coder-dist/coder-base/server.js
  sudo /home/coder/coder-dist/coder-base/config.js.localhost /home/coder/coder-dist/coder-base/config.js
  #this runs coder on :8080 for our proxy config later
  #virtual host for blockly+coder
  sudo apt-get install -y libapache2-mod-wsgi
  sudo a2enmod wsgi
  sudo a2enmod rewrite
  sudo a2enmod proxy
  sudo a2enmod proxy_http
  sudo a2enmod ssl
  #make wsgi and httpd conf
  sudo cp /home/pi/blockytalky/build.d/blockly_ws.wsgi /etc/apache2/
  sudo cp /home/pi/blockytalky/build.d/blockly_ws.conf /etc/apache2/sites-available/
  sudo a2dissite default
  sudo a2ensite blockly_ws.conf
  sudo apt-get install -y samba #for windows dns lookup

  #not for automated scripting, but the server.js needs to be poked at a little bit
  #in order for the routing to work correctly
fi

cd ~
git clone git://git.drogon.net/wiringPi
cd wiringPi
./build

echo "Setting up serial pins..."
gpio load i2c 10
sudo echo init_uart_clock=32000000 >> /boot/config.txt
sudo sed -i 's/arm_freq=[0-9]*/arm_freq=900/g' /boot/config.txt
sudo sed -i -e 's,T0:23:respawn:/sbin/getty -L ttyAMA0 115200 vt100,#T0:23:respawn:/sbin/getty -L ttyAMA0 115200 t100,' /etc/inittab
sudo sed -i -e 's/console=ttyAMA0,115200 kgdboc=ttyAMA0,115200//g' /boot/cmdline.txt
sudo sed -i -e 's,blacklist i2c-bcm2708,#blacklist i2c-bcm2708,' /etc/modprobe.d/raspi-blacklist.conf
sudo echo i2c-dev >> /etc/modules


#  sudo echo '#for real-time kernel' >> /boot/config.txt
#  sudo echo 'disable_splash=1' >> /boot/config.txt
#  sudo echo 'kernel=kernel-rt.img' >> /boot/config.txt
#  sudo echo 'force_turbo=1' >> /boot/config.txt


echo "Installing customizations..."
sudo sed -i -e 's/XKBLAYOUT="gb"/XKBLAYOUT="us"/g' /etc/default/keyboard
sudo sed -i -e 's,exit 0,sh /home/pi/blockytalky/start.sh,' /etc/rc.local
sudo echo exit 0 >> /etc/rc.local
if [ "$setup" == "y" ] || [ "$setup" == "Y" ]; then
    if [ -n "$password" ]; then
	sudo echo "network={" >> /etc/wpa_supplicant/wpa_supplicant.conf
	sudo echo "ssid=\"$ssid\"" >> /etc/wpa_supplicant/wpa_supplicant.conf
	sudo echo "key_mgmt=WPA-PSK" >> /etc/wpa_supplicant/wpa_supplicant.conf
	sudo echo "psk="\"$password\""" >> /etc/wpa_supplicant/wpa_supplicant.conf
	sudo echo "}" >> /etc/wpa_supplicant/wpa_supplicant.conf
    else
	sudo echo "network={" >> /etc/wpa_supplicant/wpa_supplicant.conf
	sudo echo "ssid=\"$ssid\"" >> /etc/wpa_supplicant/wpa_supplicant.conf
	sudo echo "key_mgmt=NONE" >> /etc/wpa_supplicant/wpa_supplicant.conf
	sudo echo "}" >> /etc/wpa_supplicant/wpa_supplicant.conf
    fi
fi

if [ "$host" == "y" ] || [ "$host" == "Y" ]; then
    sudo echo $hostname > /etc/hostname
    sudo sed -i -e "s/raspberrypi/$hostname/g" /etc/hosts
    sudo sed -i -e "s/coder/$hostname/g" /etc/hosts
    sudo export HOSTNAME=$hostname
fi

echo "BlockyTalky installed! Restart required. System restart in 5 seconds (press CTRL-C to cancel)"
sleep 1
echo "4"
sleep 1
echo "3"
sleep 1
echo "2"
sleep 1
echo "1"
sleep 1
sudo shutdown -r now
